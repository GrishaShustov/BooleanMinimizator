@model BooleanMinimizator.Models.BooleanMinimizatorModel

@{
    ViewData["Title"] = "Boolean minimizer calculator";
}

<div class="calculator">
    <h2>Калькулятор булевых функций</h2>

    <form asp-action="Index" method="post">
        <label for="inputField">Введите функцию или её вектор:</label>
        <input type="text" asp-for="InputFunction" id="inputField" placeholder="Например: 01110110"
               data-help="Введите логическое выражение или вектор функции. Например: 01110110 или (x ∧ y) ∨ ¬z">

        <button type="submit" data-help="Нажмите для построения таблицы истинности и минимизации">Построить</button>

        <div class="keyboard" id="keyboard">
            <button type="button" class="key" data-help="Логическое ИЛИ">∨</button>
            <button type="button" class="key" data-help="Логическое И">∧</button>
            <button type="button" class="key" data-help="Логическое НЕ">¬</button>
            <button type="button" class="key" data-help="Исключающее ИЛИ">⊕</button>
            <button type="button" class="key" data-help="Импликация">→</button>
            <button type="button" class="key" data-help="Эквиваленция">↔</button>
            <button type="button" class="key" data-help="Открывающая скобка">(</button>
            <button type="button" class="key" data-help="Закрывающая скобка">)</button>
            <button type="button" class="key" data-help="Переменная w">w</button>
            <button type="button" class="key" data-help="Переменная x">x</button>
            <button type="button" class="key" data-help="Переменная y">y</button>
            <button type="button" class="key" data-help="Переменная z">z</button>
        </div>

        <button type="button" id="toggleKeyboard" data-help="Скрывает или показывает клавиатуру">Скрыть клавиатуру</button>
    </form>

    @if (!string.IsNullOrEmpty(Model.ResultMessage))
    {
        <div id="output">
            <p>@Model.ResultMessage</p>
        </div>
    }

    @if (Model.FunctionExpression is not null)
    {
        <div class="alert alert-secondary mt-3">
            <strong>Функция:</strong> @Model.FunctionExpression
        </div>
    }

    @if (Model.VectorOutput is not null)
    {
        <div class="alert alert-info mt-3">
            <strong>Вектор функции:</strong> @Model.VectorOutput
        </div>
    }

    @if (Model.TruthTable != null && Model.TruthTable.Any())
    {
        <div class="mt-3">
            <h3>Таблица истинности</h3>
            <table class="truth-table">
                <thead>
                    <tr>
                        @foreach (var variable in Model.TruthTable.First().Keys)
                        {
                            <th>@variable</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var row in Model.TruthTable)
                    {
                        <tr>
                            @foreach (var variable in row.Keys)
                            {
                                <td>@(row[variable] ? "1" : "0")</td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@if (Model.IsSolved)
{
    <!-- Блок с СКНФ и СДНФ -->
    <div class="stepByStep">
        <div class="minimization-result">
            <h5>СКНФ</h5>
            <div class="formula-box">@Model.SKNFOutput</div>
        </div>

        <div class="minimization-result">
            <h5>СДНФ</h5>
            <div class="formula-box">@Model.SDNFOutput</div>
        </div>
    </div>

    <!-- Блок с картой Карно -->
    <div class="stepByStep">
        <h3>Пошаговое построение карты Карно</h3>

        <!-- Навигация -->
        <div class="karnaugh-steps-nav">
            <button type="button" onclick="prevStep()">Назад</button>
            <span id="currentStep">1</span>/@Model.KarnaughSteps.Count
            <button type="button" onclick="nextStep()">Вперед</button>
        </div>

        <!-- Контейнер для карты -->
        <div id="karnaughStepsContainer">
            @foreach (var step in Model.KarnaughSteps)
            {
                <div class="karnaugh-step">
                    <p>@step.Description</p>
                    <table class="karnaugh-map">
                        @foreach (var row in step.Map)
                        {
                            <tr>
                                @foreach (var cell in row)
                                {
                                    if (row == step.Map.First())
                                    {
                                        <th>@cell</th>
                                    }
                                    else if (cell == "1")
                                    {
                                        <td class="one">@cell</td>
                                    }
                                    else if (cell == "0")
                                    {
                                        <td class="zero">@cell</td>
                                    }
                                    else
                                    {
                                        <td>@cell</td>
                                    }
                                }
                            </tr>
                        }
                    </table>
                </div>
            }
        </div>
    </div>

    <script>
        let currentStep = 0;
        const steps = document.querySelectorAll('.karnaugh-step');

        function showStep(step) {
            steps.forEach((s, i) => s.style.display = i === step ? 'block' : 'none');
            document.getElementById('currentStep').textContent = step + 1;
        }

        function nextStep() {
            if (currentStep < steps.length - 1) {
                currentStep++;
                showStep(currentStep);
            }
        }

        function prevStep() {
            if (currentStep > 0) {
                currentStep--;
                showStep(currentStep);
            }
        }

        // Показать первый шаг
        showStep(0);
    </script>

    <!-- Блок с пошаговым решением -->
    <div class="stepByStep">
        <hr />
        <div class="solution-title">Пошаговое решение</div>
        <hr />
        <div class="solution-section">
            <h4>Минимизация ДНФ</h4>
        </div>
        <hr />

        @if (Model.Areas != null && Model.Areas.Any())
        {
            <div class="areas-maps mt-4">
                @for (int index = 0; index < Model.Areas.Count; index++)
                {
                    var area = Model.Areas[index];
                    var mapCopy = Model.KarnaughMap.Select(row => row.ToList()).ToList();
                    int rowCount = mapCopy.Count;
                    int colCount = mapCopy[0].Count;

                    bool[,] highlightMask = new bool[rowCount, colCount];

                    for (int r = area.StartRow; r < area.StartRow + area.Height; r++)
                    {
                        for (int c = area.StartCol; c < area.StartCol + area.Width; c++)
                        {
                            int wrappedRow = ((r % (rowCount - 1)) + 1); // Пропуск заголовка строк
                            int wrappedCol = ((c % (colCount - 1)) + 1); // Пропуск заголовка столбцов
                            highlightMask[wrappedRow, wrappedCol] = true;
                        }
                    }

                    <div class="highlight-area mt-4">
                        <h5>Область №@(index + 1)</h5>
                        <table class="karnaugh-map">
                            @for (int r = 0; r < rowCount; r++)
                            {
                                <tr>
                                    @for (int c = 0; c < colCount; c++)
                                    {
                                        var cell = mapCopy[r][c];
                                        if (r == 0)
                                        {
                                            <th>@cell</th>
                                        }
                                        else if (highlightMask[r, c])
                                        {
                                            <td class="highlight">@Model.KarnaughMap[r][c]</td>
                                        }
                                        else if (cell == "1")
                                        {
                                            <td class="one">@cell</td>
                                        }
                                        else if (cell == "0")
                                        {
                                            <td class="zero">@cell</td>
                                        }
                                        else
                                        {
                                            <td>@cell</td>
                                        }
                                    }
                                </tr>
                            }
                        </table>
                        <!-- Вывод формулы -->
                        <p><strong>Формула:</strong> @(Model.GetExpressionForArea(area, Model.Variables))</p>
                    </div>
                }
            </div>
        }
        @if (Model.ZeroAreas != null && Model.ZeroAreas.Any())
        {
            <div class="areas-maps mt-4">
                <div class="solution-section">
                    <h4>Минимизация КНФ</h4>
                </div>
                <hr />
                @for (int index = 0; index < Model.ZeroAreas.Count; index++)
                {
                    var area = Model.ZeroAreas[index];
                    var mapCopy = Model.KarnaughMap.Select(row => row.ToList()).ToList();
                    int rowCount = mapCopy.Count;
                    int colCount = mapCopy[0].Count;

                    bool[,] zeroHighlightMask = new bool[rowCount, colCount];

                    for (int r = area.StartRow; r < area.StartRow + area.Height; r++)
                    {
                        for (int c = area.StartCol; c < area.StartCol + area.Width; c++)
                        {
                            int wrappedRow = ((r % (rowCount - 1)) + 1); // Пропуск заголовка строк
                            int wrappedCol = ((c % (colCount - 1)) + 1); // Пропуск заголовка столбцов
                            zeroHighlightMask[wrappedRow, wrappedCol] = true;
                        }
                    }

                    <div class="highlight-area mt-4">
                        <h5>Область №@(index + 1)</h5>
                        <table class="karnaugh-map">
                            @for (int r = 0; r < rowCount; r++)
                            {
                                <tr>
                                    @for (int c = 0; c < colCount; c++)
                                    {
                                        var cell = mapCopy[r][c];
                                        if (r == 0)
                                        {
                                            <th>@cell</th>
                                        }
                                        else if (zeroHighlightMask[r, c])
                                        {
                                            <td class="zero-highlight">@Model.KarnaughMap[r][c]</td>
                                        }
                                        else if (cell == "1")
                                        {
                                            <td class="one">@cell</td>
                                        }
                                        else if (cell == "0")
                                        {
                                            <td class="zero">@cell</td>
                                        }
                                        else
                                        {
                                            <td>@cell</td>
                                        }
                                    }
                                </tr>
                            }
                        </table>
                        <!-- Вывод формулы -->
                        <p><strong>Формула:</strong> @(Model.GetExpressionForZeroArea(area, Model.Variables))</p>
                    </div>
                }
            </div>
        }
    </div>
    <!-- Вывод МДНФ и МКНФ -->
    <div class="stepByStep">
        @if (!string.IsNullOrEmpty(Model.MDNFOutput))
        {
            <div class="minimization-result">
                <h5>МДНФ</h5>
                <div class="formula-box">@Model.MDNFOutput</div>
            </div>
        }

        @if (!string.IsNullOrEmpty(Model.MKNFOutput))
        {
            <div class="minimization-result">
                <h5>МКНФ</h5>
                <div class="formula-box">@Model.MKNFOutput</div>
            </div>
        }
    </div>
}


<section class="instructions">
    <h2>Как пользоваться калькулятором</h2>
    <ul>
        <li> Введите в поле логическую функцию или её вектор.</li>
        <li> Используйте клавиатуру для быстрого ввода символов.</li>
        <li> Нажмите на кнопку "Построить" для расчёта минимизации.</li>
        <li> Если вы не понимаете значение какой-либо кнопки, наведитесь на неё и нажмите F1, чтобы узнать её назначение.</li>
    </ul>
</section>

<button type="button" id="helpButton" data-help="Открывает информацию о поддержке">Поддержка</button>

<div id="supportText" class="support-text" style="display:none;">
    <h3>Как получить поддержку</h3>
    <p>Если у вас возникли проблемы, обратитесь к нам по электронной почте.</p>
    <p><strong>Email:</strong> support@website.com</p>
    <p>Мы всегда готовы помочь!</p>
</div>

<script src="~/js/contextHelp.js"></script>